# Gradle
# Build your Java project and run tests with Gradle using a Gradle wrapper script.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- master
- feature/*

pool:
  vmImage: ubuntu-latest

steps:
- task: Gradle@2
  inputs:
    workingDirectory: ''
    gradleWrapperFile: 'gradlew'
    gradleOptions: '-Xmx3072m'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.11'
    jdkArchitectureOption: 'x64'
    publishJUnitResults: true
    testResultsFiles: '**/TEST-*.xml'
    tasks: 'clean build test jacocoTestReport
            jib -Djib.to.image=$(EWTestContainerRegistryURL)/kotlin-beer:latest
            -Djib.to.auth.username=$(EWTestContainerRegistryUser)
            -Djib.to.auth.password=$(EWTestContainerRegistryPW)'

- task: PublishCodeCoverageResults@1
  inputs:
    summaryFileLocation: '$(System.DefaultWorkingDirectory)/**/reports/jacoco/report.xml'
    pathToSources: '$(System.DefaultWorkingDirectory)/src/main/kotlin'